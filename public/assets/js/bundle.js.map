{"version":3,"file":"bundle.js","mappings":";sQACA,urNADqBA,EAAAA,WACnB,WAAYC,sGAAY,SACtBC,KAAKC,KAAOC,SAASC,cAAcJ,GACnCC,KAAKI,sDAAaJ,KAAKC,skBACxB,6CAED,WACED,KAAKK,WACLL,KAAKM,UACN,2BAED,SAAWC,EAASC,EAAMC,GACpBA,GAAOF,EAAQE,QAEnBF,EAAQG,mBAAmBC,UAAYH,CAExC,yBAED,WAAW,WACTR,KAAKY,SAAU,EAOf,IANA,IAAMC,EAAQ,CACZC,MAAO,gBAGHC,EAAe,GAEbC,EAAI,EAAGA,EAAIhB,KAAKI,OAAOa,OAAQD,IAAK,CAC1C,GAAIhB,KAAKI,OAAOY,GAAGE,UAAUC,SAAS,YAAa,CACjD,GAA6B,KAAzBnB,KAAKI,OAAOY,GAAGI,MAGjB,OAFApB,KAAKqB,WAAWrB,KAAKI,OAAOY,GAAI,wBAAwB,QACxDhB,KAAKY,SAAU,GAGfZ,KAAKqB,WAAWrB,KAAKI,OAAOY,GAAI,GAEnC,CAED,GAAIhB,KAAKI,OAAOY,GAAGE,UAAUC,SAAS,gBACP,KAAzBnB,KAAKI,OAAOY,GAAGI,MAAc,CAC/B,IAAKP,EAAMC,MAAMQ,KAAKtB,KAAKI,OAAOY,GAAGI,OAGnC,OAFApB,KAAKqB,WAAWrB,KAAKI,OAAOY,GAAI,4BAA4B,QAC5DhB,KAAKY,SAAU,GAGfZ,KAAKqB,WAAWrB,KAAKI,OAAOY,GAAI,GAEnC,CAGH,GAAIhB,KAAKI,OAAOY,GAAGE,UAAUC,SAAS,SAAU,CAC9C,GAAInB,KAAKI,OAAOY,GAAGI,MAAMH,OAAS,EAGhC,OAFAjB,KAAKqB,WAAWrB,KAAKI,OAAOY,GAAI,8CAA8C,QAC9EhB,KAAKY,SAAU,GAGfZ,KAAKqB,WAAWrB,KAAKI,OAAOY,GAAI,GAEnC,CAED,GAAIhB,KAAKI,OAAOY,GAAGE,UAAUC,SAAS,UAAW,CAC/C,GAAInB,KAAKI,OAAOY,GAAGI,MAAMH,OAAS,GAGhC,OAFAjB,KAAKqB,WAAWrB,KAAKI,OAAOY,GAAI,gDAAgD,QAChFhB,KAAKY,SAAU,GAGfZ,KAAKqB,WAAWrB,KAAKI,OAAOY,GAAI,GAEnC,CAEGhB,KAAKI,OAAOY,GAAGE,UAAUC,SAAS,gBACpCJ,EAAaQ,KAAKvB,KAAKI,OAAOY,GAEjC,CAEGD,EAAaE,OAAS,IACxBF,EAAaS,SAAQ,SAAAjB,GAAO,OAAI,EAAKc,WAAWd,EAAS,GAA7B,IAC5BQ,EAAaU,QAAO,SAACC,EAAKC,GACxB,GAAiB,IAAbD,EAAIN,OAAgC,IAAjBO,EAAQP,MAI7B,OAHA,EAAKC,WAAWK,EAAK,wEAAwE,GAC7F,EAAKL,WAAWM,EAAS,wEAAwE,QACjG,EAAKf,SAAU,EAGjB,IAEL,sCAED,kFACKZ,KAAKY,QADV,gBAEIZ,KAAKC,KAAK2B,SAFd,sYAvFmB9B,sPCCrB,m6MACA,IAAMG,EAAOC,SAASC,cAAc,eACpC,GAAIF,EAAM,CACR,IAAM4B,EAAgB,IAAI/B,EAAc,eAExCG,EAAK6B,iBAAiB,SAAtB,gCAAgC,WAAOC,GAAP,iEAC9BA,EAAMC,iBACNH,EAAcI,OACdJ,EAAcvB,WAHgB,yNAAhC,sDAKD","sources":["webpack://aula_node/./frontend/assets/js/FormValidator.js","webpack://aula_node/./frontend/assets/js/main.js"],"sourcesContent":["export default class FormValidator {\r\n  constructor(inputClass) {\r\n    this.form = document.querySelector(inputClass);\r\n    this.inputs = [...this.form];\r\n  }\r\n\r\n  init() {\r\n    this.validate();\r\n    this.sendForm();\r\n  }\r\n\r\n  addAuxText(element, text, focus) {\r\n    if (focus) element.focus();\r\n\r\n    element.nextElementSibling.innerHTML = text;\r\n\r\n  }\r\n\r\n  validate() {\r\n    this.isValid = true;\r\n    const regex = {\r\n      email: /\\S+@\\S+\\.\\S+/\r\n    }\r\n\r\n    const oneOrAnother = [];\r\n\r\n    for(let i = 0; i < this.inputs.length; i++) {\r\n      if (this.inputs[i].classList.contains(\"required\")) {\r\n        if (this.inputs[i].value === \"\") {\r\n          this.addAuxText(this.inputs[i], \"Preencha este campo!\", true);\r\n          this.isValid = false;\r\n          return;\r\n        } else {\r\n          this.addAuxText(this.inputs[i], \"\");\r\n        }\r\n      }\r\n\r\n      if (this.inputs[i].classList.contains(\"email-valid\")) {\r\n        if (this.inputs[i].value !== \"\") {\r\n          if (!regex.email.test(this.inputs[i].value)) {\r\n            this.addAuxText(this.inputs[i], \"Preencha um email válido\", true);\r\n            this.isValid = false;\r\n            return;\r\n          } else {\r\n            this.addAuxText(this.inputs[i], \"\");\r\n          }\r\n        }\r\n      }\r\n\r\n      if (this.inputs[i].classList.contains(\"min-3\")) {\r\n        if (this.inputs[i].value.length < 3) {\r\n          this.addAuxText(this.inputs[i], \"O campo precisa de no minímo 3 caracteres!\", true);\r\n          this.isValid = false;\r\n          return;\r\n        } else {\r\n          this.addAuxText(this.inputs[i], \"\");\r\n        }\r\n      }\r\n\r\n      if (this.inputs[i].classList.contains(\"max-50\")) {\r\n        if (this.inputs[i].value.length > 50) {\r\n          this.addAuxText(this.inputs[i], \"O campo pode conter no máximo 50 caracteres!\", true);\r\n          this.isValid = false;\r\n          return;\r\n        } else {\r\n          this.addAuxText(this.inputs[i], \"\");\r\n        }\r\n      }\r\n\r\n      if (this.inputs[i].classList.contains(\"required-or\")) {\r\n        oneOrAnother.push(this.inputs[i]);\r\n      }\r\n    }\r\n\r\n    if (oneOrAnother.length > 1) {\r\n      oneOrAnother.forEach(element => this.addAuxText(element, \"\"));\r\n      oneOrAnother.reduce((one, another) => {\r\n        if (one.value == \"\" && another.value == \"\") {\r\n          this.addAuxText(one, \"Pelo menos uma forma de contato deve ser enviada: Email ou Telefone!\", true);\r\n          this.addAuxText(another, \"Pelo menos uma forma de contato deve ser enviada: Email ou Telefone!\", true);\r\n          this.isValid = false;\r\n          return;\r\n        }\r\n       })\r\n    }\r\n  }\r\n\r\n  async sendForm() {\r\n   if (this.isValid) {\r\n      this.form.submit();\r\n   } else {\r\n     return;\r\n   }\r\n\r\n  }\r\n\r\n}","import FormValidator from \"./FormValidator.js\";\r\n\r\nconst form = document.querySelector('.form-valid');\r\nif (form) {\r\n  const formValidator = new FormValidator('.form-valid');\r\n  \r\n  form.addEventListener(\"submit\", async (event) => {\r\n    event.preventDefault();\r\n    formValidator.init();\r\n    formValidator.sendForm();\r\n  })\r\n}\r\n"],"names":["FormValidator","inputClass","this","form","document","querySelector","inputs","validate","sendForm","element","text","focus","nextElementSibling","innerHTML","isValid","regex","email","oneOrAnother","i","length","classList","contains","value","addAuxText","test","push","forEach","reduce","one","another","submit","formValidator","addEventListener","event","preventDefault","init"],"sourceRoot":""}